language: cpp
sudo: required
dist: xenial

matrix:
    include:
        - os: linux
          compiler: gcc
#          addons:
#              apt:
#                  sources: ['ubuntu-toolchain-r-test']
#                  packages: ['g++-8', 'gcc-8', 'cmake']
#          env:
#              - 

branches:
    only:
        - master

before_script:
    - cmake --version
    - gcc --version
#    - sudo ln -s /usr/bin/gcc-8 /usr/local/bin/gcc
#    - sudo ln -s /usr/bin/g++-8 /usr/local/bin/g++
#    - cd src

script: 
    - mkdir build
    - cd build
    - cmake ../src 
    - cmake --build .
#    - make perft PDEPTH=6 && ./iathena
#    - make clean 
#    - make mirror && ./iathena
#    - make clean

#      compiler: gcc
#      addons:
#        apt:
#         sources: ['ubuntu-toolchain-r-test']
#          packages: ['g++-8', 'g++-8-multilib', 'g++-multilib', 'valgrind', 'expect', 'curl']
#      env:
#        - COMPILER=g++-8
#		- COMP=gcc

#script:
# Obtain bench reference from git log
#  - git log HEAD | grep "\b[Bb]ench[ :]\+[0-9]\{7\}" | head -n 1 | sed "s/[^0-9]*\([0-9]*\).*/\1/g" > git_sig
#  - export benchref=$(cat git_sig)
#  - echo "Reference bench:" $benchref
#
# Verify bench number against various builds
#  - export CXXFLAGS=-Werror
#  - make clean && make -j2 ARCH=x86-64 optimize=no debug=yes build && ../tests/signature.sh $benchref
#  - make clean && make -j2 ARCH=x86-32 optimize=no debug=yes build && ../tests/signature.sh $benchref
#  - make clean && make -j2 ARCH=x86-32 build && ../tests/signature.sh $benchref
#  - make clean && make -j2 ARCH=x86-64 build && ../tests/signature.sh $benchref
#
# Check perft and reproducible search
#  - ../tests/perft.sh
# - ../tests/reprosearch.sh
#
# Valgrind
#
#  - export CXXFLAGS="-O1 -fno-inline"
#  - if [ -x "$(command -v valgrind )" ]; then make clean && make -j2 ARCH=x86-64 debug=yes optimize=no build > /dev/null && ../tests/instrumented.sh --valgrind; fi
#  - if [ -x "$(command -v valgrind )" ]; then ../tests/instrumented.sh --valgrind-thread; fi
#
# Sanitizer
#
# Use g++-8 as a proxy for having sanitizers, might need revision as they become available for more recent versions of clang/gcc
# - if [[ "$COMPILER" == "g++-8" ]]; then make clean && make -j2 ARCH=x86-64 sanitize=undefined optimize=no debug=yes build > /dev/null && ../tests/instrumented.sh --sanitizer-undefined; fi
# - if [[ "$COMPILER" == "g++-8" ]]; then make clean && make -j2 ARCH=x86-64 sanitize=thread    optimize=no debug=yes build > /dev/null && ../tests/instrumented.sh --sanitizer-thread; fi
